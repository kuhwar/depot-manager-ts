datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Category {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  isDeleted Boolean  @default(false)

  name    String
  Product Product[]

  @@map("categories")
}

model Depot {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  isDeleted Boolean  @default(false)

  displayName String @map("display_name")
  logo        String
  adminPath   String @default("/admin-dashboard") @map("admin_path")

  hosts   Host[]
  users   User[]
  shelves Shelf[]
  posts   Post[]
  items   Item[]

  @@map("depots")
}

model Host {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  isDeleted Boolean  @default(false)

  name String @unique

  depot   Depot @relation(fields: [depotId], references: [id])
  depotId Int   @map("depot_id")

  @@map("hosts")
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  isDeleted Boolean  @default(false)

  email        String @unique
  displayName  String @map("display_name")
  profilePhoto String @map("profile_photo")

  depot   Depot @relation(fields: [depotId], references: [id])
  depotId Int   @map("depot_id")

  @@map("users")
}

model Shelf {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  isDeleted Boolean  @default(false)

  name String

  depot   Depot @relation(fields: [depotId], references: [id])
  depotId Int   @map("depot_id")

  items Item[]

  @@map("shelves")
}

model Product {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  isDeleted Boolean  @default(false)

  name        String
  upc         String
  visuals     Json
  price       Float
  description String
  walmartId   String?

  // Foreign Keeys
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int

  // Child items
  posts Post[]
  items Item[]

  @@index([categoryId])
  @@map("products")
}

model Item {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  isDeleted Boolean  @default(false)

  soldAt DateTime? @map("sold_at")

  // Foreign Keeys
  product   Product @relation(fields: [productId], references: [id])
  productId Int     @map("product_id")
  shelf     Shelf   @relation(fields: [shelfId], references: [id])
  shelfId   Int     @map("shelf_id")
  depot     Depot   @relation(fields: [depotId], references: [id])
  depotId   Int     @map("depot_id")

  @@map("items")
}

model Post {
  id        Int      @id @unique()
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  isDeleted Boolean  @default(false)

  isActive Boolean @default(true)

  // Foreign Keeys
  product   Product @relation(fields: [productId], references: [id])
  productId Int     @map("product_id")
  depot     Depot   @relation(fields: [depotId], references: [id])
  depotId   Int     @map("depot_id")

  @@map("posts")
}
