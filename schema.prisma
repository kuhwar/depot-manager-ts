datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

model Category {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  isDeleted Boolean  @default(false) @map("is_deleted")

  name    String
  Product Product[]

  @@map("categories")
}

model Depot {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  isDeleted Boolean  @default(false) @map("is_deleted")

  displayName String @map("display_name")
  logo        String
  adminPath   String @default("/admin-dashboard") @map("admin_path")

  hosts    Host[]
  users    User[]
  shelves  Shelf[]
  posts    Post[]
  products Product[]

  @@map("depots")
}

model Host {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  isDeleted Boolean  @default(false) @map("is_deleted")

  name String @unique

  depot   Depot @relation(fields: [depotId], references: [id])
  depotId Int   @map("depot_id")

  @@map("hosts")
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  isDeleted Boolean  @default(false) @map("is_deleted")

  email        String
  displayName  String   @map("display_name")
  profilePhoto String   @map("profile_photo")
  lastLoginAt  DateTime @default(now()) @map("last_login_at")
  lastLoginIp  String   @default("0.0.0.0") @map("last_login_ip")

  depot   Depot @relation(fields: [depotId], references: [id])
  depotId Int   @map("depot_id")

  @@unique([email, depotId])
  @@map("users")
}

model Shelf {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  isDeleted Boolean  @default(false) @map("is_deleted")

  name String

  // Foreign Keys
  depot   Depot @relation(fields: [depotId], references: [id])
  depotId Int   @map("depot_id")

  // Child items
  items Item[]

  @@map("shelves")
}

model Product {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  isDeleted Boolean  @default(false) @map("is_deleted")

  name           String  @db.VarChar(99)
  upc            String
  visuals        Json
  price          Float
  // https://www.npmjs.com/package/html-to-text-conv
  description    String  @db.Text
  variationLabel String? @map("variation_label")
  walmartId      String? @map("walmart_id")

  // Foreign Keeys
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int      @map("category_id")
  depot      Depot    @relation(fields: [depotId], references: [id])
  depotId    Int      @map("depot_id")

  // Child items
  posts Post[]
  items Item[]

  @@unique([walmartId, depotId], name: "depot_id_walmart_id_unique")
  @@index([categoryId])
  @@fulltext([name])
  @@map("products")
}

model Item {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  isDeleted Boolean  @default(false) @map("is_deleted")

  soldAt DateTime? @map("sold_at")

  // Foreign Keeys
  product        Product       @relation(fields: [productId], references: [id])
  productId      Int           @map("product_id")
  shelf          Shelf         @relation(fields: [shelfId], references: [id])
  shelfId        Int           @map("shelf_id")
  manifestItem   ManifestItem? @relation(fields: [manifestItemId], references: [id])
  manifestItemId Int?          @unique @map("manifest_item_id")

  @@map("items")
}

model Post {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  isDeleted Boolean  @default(false) @map("is_deleted")

  // Foreign Keeys
  product   Product @relation(fields: [productId], references: [id])
  productId Int     @map("product_id")
  depot     Depot   @relation(fields: [depotId], references: [id])
  depotId   Int     @map("depot_id")

  @@map("posts")
}

model Manifest {
  id        String   @unique() @db.Char(5)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  isDeleted Boolean  @default(false) @map("is_deleted")

  cost        Float          @default(0)
  totalValue  Float          @default(0) @map("total_value")
  fileContent String         @map("file_content") @db.LongText
  fileName    String         @map("file_name")
  items       ManifestItem[]

  @@map("manifests")
}

model ManifestItem {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  isDeleted Boolean  @default(false) @map("is_deleted")

  upc       String
  name      String
  palletId  String  @map("pallet_id")
  quantity  Int
  price     Float
  visual    String  @default("/default-product.png") @db.MediumText
  walmartId String? @map("walmart_id")

  item Item?

  // Foreign Keeys
  manifest   Manifest @relation(fields: [manifestId], references: [id])
  manifestId String   @map("manifest_id") @db.Char(5)

  @@map("manifest_items")
}
